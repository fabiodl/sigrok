-------------------------------------------------------------------------------
HACKING
-------------------------------------------------------------------------------

Coding style
------------

This project is programmed using the Linux kernel coding style, see
http://lxr.linux.no/linux/Documentation/CodingStyle for details.

Please use the same style for any code contributions, thanks!

As an exception, the GUI application uses the usual Qt / C++ conventions of
mixed-case variable names, capital letters for class names etc. However,
please do use an indention of one tab here too, just as with the other code.

The Python decoders should also follow the usual Python conventions and use
Python idioms as far as it makes sense, but they should also indent the
code with extactly one tab.


Creating a Windows installer
----------------------------

In order to create a self-contained Windows installer EXE file for sigrok,
you can do the following (currently must be done on a Windows/MinGW system):

Build sigrok and install it into a temporary folder:

 $ ./configure --prefix=$PWD/contrib/nsis/dist && make && make install

Build the GUI in gui/ (optional if you comment out some lines in sigrok.nsi).

 $ cd gui
 $ qmake
 $ make
 $ cd ..

Download the Windows Python 2.6.6 installer into contrib/nsis/dist:

 $ cd contrib/nsis/dist
 $ wget http://www.python.org/ftp/python/2.6.6/python-2.6.6.msi
 $ cd ../../..

Create the installer (assumes all required libs in certain directories) via:

 $ cd contrib/nsis
 $ makensis sigrok.nsi

This will create a sigrok-installer-$VERSION.exe self-extracting installer.

